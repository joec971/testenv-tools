Index: CMakeLists.txt
===================================================================
--- a/CMakeLists.txt	(revision 795)
+++ b/CMakeLists.txt	(working copy)
@@ -99,15 +99,13 @@
    set (CONDITIONAL_FILES ${CONDITIONAL_FILES} "libusb_dyn.c")
 else("${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
    pkg_check_modules(LIBUSB_COMPAT REQUIRED libusb)
-   include_directories(${LIBUSB_INCLUDE_DIRS})
+   include_directories(${LIBUSB_INCLUDE_DIRS} ${LIBUSB_COMPAT_INCLUDE_DIRS})
+   link_directories(${LIBUSB_LIBRARY_DIRS})
+   link_directories(${LIBUSB_COMPAT_LIBRARY_DIRS})
+   link_directories(${LIBFTDI_LIBRARY_DIRS})
    set(CONDITIONAL_LIBS ${CONDITIONAL_LIBS} usb usb-1.0)
-
 endif("${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
 
-if(NOT "${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
-        set (CONDITIONAL_FILES ${CONDITIONAL_FILES} "ioparport.cpp")
-endif(NOT "${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
-
 set (LIBUSRP_INCLUDE_DIR "fallback/")
 include_directories(${LIBUSRP_INCLUDE_DIR})
 
Index: utilities.cpp
===================================================================
--- a/utilities.cpp	(revision 795)
+++ b/utilities.cpp	(working copy)
@@ -57,8 +57,8 @@
 
   if (cable->cabletype == CABLE_PP)
     {
-#ifdef __MACH__
-          fprintf(stderr, "Parallel port cables are not supported on OS X.\n");
+#if 1
+          fprintf(stderr, "Parallel port cables are not supported on Docker.\n");
           return 1;
 #else
 	  io->reset(new IOParport());
